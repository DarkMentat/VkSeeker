apply plugin: 'docker'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'


buildscript {
	ext {
		kotlinVersion = '1.0.6'
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")

        classpath('se.transmode.gradle:gradle-docker:1.2')

        classpath("com.moowork.gradle:gradle-node-plugin:1.1.1")
    }
}

jar {
    baseName = 'vk-seeker'
    version =  '0.0.1'

	from {
		configurations.compile.collect {
			it.isDirectory() ? it : zipTree(it)
		}
		configurations.runtime.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}

	manifest {
		attributes 'Main-Class': 'org.darkmentat.vkseeker.ApplicationKt'
	}
}

task buildClient(type: NpmTask) {
    workingDir = file("../client")

    args = ['run', 'build']
}

task copyClientFiles(type: Copy) {
	from("../client/public")
	into 'src/main/resources/static'
}

task buildDocker(type: Docker) {

    dependsOn 'buildClient'
    dependsOn 'copyClientFiles'
    dependsOn 'build'
    tasks.findByName('copyClientFiles').mustRunAfter 'buildClient'
    tasks.findByName('build').mustRunAfter 'copyClientFiles'
    push = false
    applicationName = jar.baseName
    dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {

	compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
	compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

	compile "org.springframework.boot:spring-boot-starter-web"
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.springframework.boot:spring-boot-devtools"

    compile "com.h2database:h2"

	compile 'com.vk.api:sdk:0.3.9'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
